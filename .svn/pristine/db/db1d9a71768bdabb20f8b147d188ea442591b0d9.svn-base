<template>
  <el-row>
    <el-col :span="12">
      <div ref="homePage" class="login-load" ><h2><a href="/rmarket" target="_blank">资源服务市场</a></h2></div>
    </el-col>
    <el-col :span="12">
      <div class="login-container">
        <el-form
          ref="loginForm"
          :model="loginForm"
          :rules="loginRules"
          class="login-form"
          auto-complete="on"
          label-position="left"
        >
          <div class="title-container">
            <h3 class="title">欢迎登录RPA数字化平台</h3>
          </div>

          <el-form-item prop="username">
            <span class="svg-container">
              <svg-icon icon-class="user" />
            </span>
            <el-input
              ref="username"
              v-model="loginForm.username"
              placeholder="请输入注册手机号"
              name="username"
              type="text"
              tabindex="1"
              auto-complete="off"
            />
          </el-form-item>

          <el-form-item prop="password">
            <span class="svg-container">
              <svg-icon icon-class="password" />
            </span>
            <el-input
              :key="passwordType"
              ref="password"
              v-model="loginForm.password"
              :type="passwordType"
              placeholder="请输入密码"
              name="password"
              tabindex="2"
              auto-complete="off"
              @keyup.enter.native="handleLogin"
            />
            <span class="show-pwd" @click="showPwd">
              <svg-icon :icon-class="passwordType === 'password' ? 'eye' : 'eye-open'" />
            </span>
          </el-form-item>
          <el-row class="forget-box">
            <el-col :span="12" class="forget">
              <a class="a-blue" @click="forgetPswEvent">忘记密码</a>
            </el-col>
            <el-col :span="12" class="once">没有账号？
              <!--<router-link to="/register" class="a-blue">立即注册</router-link>-->
              <a @click="registerEvent" class="a-blue">立即注册</a>
            </el-col>
          </el-row>

          <el-button
            :loading="loading"
            style="width:100%;margin-bottom:30px;"
            @click.native.prevent="handleLogin"
          >登录</el-button>

          <div class="tips">
            <span style="margin-right:20px;">username: admin</span>
            <span>password: any</span>
          </div>
        </el-form>
      </div>
    </el-col>
  </el-row>
</template>

<script>
import { validUsername } from '@/utils/validate';
import { login } from "@/api/user";
import { dealUrlFun } from '@/utils/index';

export default {
  name: 'Login',
  data() {
    const validateUsername = (rule, value, callback) => {
      if (!validUsername(value)) {
        callback(new Error('用户名不能为空'))
      } else {
        callback()
      }
    }
    const validatePassword = (rule, value, callback) => {
      if (!value.length) {
        callback(new Error('密码不能为空'))
      } else {
        callback()
      }
    }
    return {
      clientHeight: '',
      loginForm: {
        username: '',
        password: ''
      },
      loginRules: {
        username: [
          { required: true, trigger: 'blur', validator: validateUsername }
        ],
        password: [
          { required: true, trigger: 'blur', validator: validatePassword }
        ]
      },
      loading: false,
      passwordType: 'password',
      redirect: undefined
    }
  },

  watch: {
    $route: {
      handler: function(route) {
        this.redirect = route.query && route.query.redirect
      },
      immediate: true
    },
    clientHeight: function() {
      this.changeFixed(this.clientHeight)
    }
  },
  mounted() {
    // 获取浏览器可视区域高度
    this.clientHeight = `${document.documentElement.clientHeight}` // document.body.clientWidth;
    // console.log(self.clientHeight);
    window.onresize = function temp() {
      this.clientHeight = `${document.documentElement.clientHeight}`
    }
  },
  destroyed() {

  },
  methods: {
    changeFixed(clientHeight) {
      // 动态修改样式
      console.log(clientHeight)
      this.$refs.homePage.style.height = clientHeight + 'px'
    },

    showPwd() {
      if (this.passwordType === 'password') {
        this.passwordType = ''
      } else {
        this.passwordType = 'password'
      }
      this.$nextTick(() => {
        this.$refs.password.focus()
      })
    },
    handleLogin() {
      let url = sessionStorage.getItem("url",url);
      let dealUrl = dealUrlFun(url);
      this.$refs.loginForm.validate(valid => {
        if (valid) {
          this.loading = true
//          this.$store
//            .dispatch('user/login', this.loginForm)
//            .then((res) => {
//              // this.$router.push({ path: this.redirect || "/" });
//              // this.$router.push("/example")
//              this.$router.push({ path: '/' || '/' })
//              // debugger
//              this.loading = false
//            })
//            .catch(() => {
//              this.loading = false
//            })

          //点击登录按钮之后隐藏密码
          //this.passwordType = 'password';
          login(this.loginForm).then(res=>{
            console.log('登录成功',res);
            this.loading = false;
            //登录有两种情况：
            //1.已经有账号，直接登录 （1）admin登录 （2）手机号码登录
            //2.注册完之后，自动登录 （手机号码登录）
            //sessionStorage.setItem('userName',res.realname);
            //修改：localStorage.setItem('userName',res.realname)
            localStorage.setItem('userName',res.realname);
            //localStorage.setItem('password',res.password);
            //admin登录phone为null
            //sessionStorage.setItem('phone',res.phone);
            //sessionStorage.setItem("enterpriseName",res.enterpriseName);
            //修改：sessionStorage为localStorage
            localStorage.setItem('phone',res.phone);
            localStorage.setItem("enterpriseName",res.enterpriseName);
            if(url) {
              this.$router.push({
                path: dealUrl
              });
              //离开页面时，清空url
              sessionStorage.setItem("url","");
            }else {
              this.$router.push({ path: '/' || '/' })
            }
          }).catch(err=>{
            this.loading = false;
          })
        } else {
          console.log('error submit!!')
          return false
        }
      })
    },
    //立即注册
    registerEvent() {
      console.log('立即注册---',window.location.hash);
      this.$router.push({
        path: '/register',
      })

//      let url = window.location.hash;
//      console.log('window.location.hash',window.location.hash);
//      //如果是url是 #/detail?bid=1006&flag=robot 这种的话需要根据？截取
//      if(url.indexOf("?") > -1) {
//        let splitUrl = url.split('?');
//        let newUrl = splitUrl[0];
//        let dealNewUrl = url.substring(1);
//        this.$router.push({
//          path: '/register',
//          query: {
//            flag: dealNewUrl,
//          }
//        })
//      }else {
//        //如果是 url是 #/或者#/search的话，就直接截取#号后面的
//        let dealUrl = url.substring(1);
//        //console.log('dealUrl',dealUrl);
//        this.$router.push({
//          path: '/register',
//          query: {
//            flag: dealUrl,
//          }
//        })
//      }
    },
    //忘记密码
    forgetPswEvent() {
      this.$router.push('/forgetPsw');
    }
  }
}
</script>

<style lang="scss" >
/* 修复input 背景不协调 和光标变色 */
/* Detail see https://github.com/PanJiaChen/vue-element-admin/pull/927 */

$bg: #fff;
$light_gray: #fff;
$cursor: #fff;

@supports (-webkit-mask: none) and (not (cater-color: $cursor)) {
  .login-container .el-input input {
    color: $cursor;
  }
}
.login-load {
  background: url(./../../assets/index/pic.png) left #1653d3;
  background-size: cover;
  height: 500px;
  width: 100%; position: relative;
  h2{ position:absolute; top: 40px; right: 400px; font-size:22px; color:rgba(255,255,255,1);}
}

/* reset element-ui css */
.login-container {
  .forget-box {
    font-size: 12px;

    color: rgba(100, 100, 100, 1);
    opacity: 0.5;
  }
  .el-button {
    width: 344px;
    height: 46px;
    background: rgba(72, 101, 234, 1);
    border-radius: 6px;
    color: #fff;
  }
  .el-input {
    display: inline-block;
    height: 40px;
    width: 85%;
    width: 230px;
    height: 40px;
    background: rgba(255, 255, 255, 1);
    border: 1px solid rgba(151, 151, 151, 1);
    opacity: 0.4;
    border-radius: 6px;
    padding-left: 30px;

    input {
      background: transparent;
      border: 0px;
      -webkit-appearance: none;
      border: 0px;
      padding: 20px 5px 12px 15px;
      color: rgba(100, 100, 100, 1);
    }
  }

  .el-form-item {
    border: 1px solid rgba(255, 255, 255, 0.1);
    background: #fff;
    border-radius: 5px;
    color: #454545;
    position: relative;
  }
}
</style>

<style lang="scss" scoped>
$bg: #fff;
$dark_gray: #889aa4;
$light_gray: #eee;
.el-row {
  margin-bottom: 20px;
  &:last-child {
    margin-bottom: 0;
  }
}

.login-container {
  min-height: 100%;
  width: 100%;
  background-color: $bg;
  overflow: hidden;

  .login-form {
    position: relative;
    width: 304px;
    max-width: 100%;
    padding: 160px 35px 0;
    margin: 0 auto;
    overflow: hidden;
  }

  .tips {
    font-size: 14px;
    color: #fff;
    margin-bottom: 10px;

    span {
      &:first-of-type {
        margin-right: 16px;
      }
    }
  }

  .svg-container {
    padding: 6px 5px 6px 15px;
    color: $dark_gray;
    vertical-align: middle;
    width: 30px;
    display: inline-block;
    position: absolute;
    top: -4px;
    left: 0px;
  }

  .title-container {
    position: relative;
    margin-bottom: 60px;

    .title {
      font-size: 18px;
      font-weight: bold;
      color: rgba(100, 100, 100, 1);
      text-align: center;
    }
  }

  .show-pwd {
    position: absolute;
    right: 10px;
    top: 7px;
    font-size: 16px;
    color: $dark_gray;
    cursor: pointer;
    user-select: none;
  }
}
</style>
